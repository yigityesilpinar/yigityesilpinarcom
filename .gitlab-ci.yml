image: yigityesilpinar/docker-node:latest

variables:
  PROJECT_NAME: 'yigityesilpinarcom'
  DOCKER_USERNAME: 'yigityesilpinar'
  TAG: 'latest'
  DOCKER_IMAGE: '$DOCKER_USERNAME/$PROJECT_NAME:$TAG'
  GCLOUD_DOCKER_IMAGE: 'gcr.io/$GCLOUD_PROJECT_ID/web:$TAG'
  GCLOUD_SECRETS_FILENAME: 'gcloud-service-key.json'
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ''

services:
  - docker:19.03.11-dind

before_script:
  - docker info

cache: &global_cache
  key:
    files:
      - package-lock.json
  paths:
    - node_modules/
  policy: pull-push

stages:
  - install
  - lint
  - build
  - deploy

.pullNode:
  cache:
    # inherit all global cache settings
    <<: *global_cache
    # override the policy
    policy: pull

install:
  stage: install
  cache:
    # inherit all global cache settings
    <<: *global_cache
    # override the policy
    policy: pull-push
  script:
    - npm install

lint:type:check:
  stage: lint
  extends: .pullNode
  script:
    - npm run type:check

lint:lint:
  stage: lint
  extends: .pullNode
  script:
    - npm run lint

build:
  stage: build
  extends: .pullNode
  artifacts:
    paths:
      - build/
    expire_in: 30 mins
  script:
    - npm run build
    - npm run generateVersion
    - npm version --no-git-tag-version $( cat ./build/version.txt )
    - echo "${CI_DEPLOY_KEY}" > /root/.ssh/id_rsa && chmod 400 /root/.ssh/id_rsa
    - ssh-keyscan gitlab.com >> /root/.ssh/known_hosts
    - git commit -am "CI version tag $( cat ./build/version.txt )"
    - git tag $( cat ./build/version.txt )
    - git push --tags -o ci.skip

deploy:
  stage: deploy
  #TODO: revert disabling deploy
  only:
    - xxx
  dependencies:
    - build
  script:
    # prepare auth for gcloud
    - echo $GCLOUD_SERVICE_KEY > ./$GCLOUD_SECRETS_FILENAME
    - /google-cloud-sdk/bin/gcloud auth activate-service-account --key-file ./$GCLOUD_SECRETS_FILENAME
    # build docker image
    - docker build -t $GCLOUD_DOCKER_IMAGE .
    - docker login -u _json_key --password-stdin https://gcr.io < ./$GCLOUD_SECRETS_FILENAME
    - docker push $GCLOUD_DOCKER_IMAGE
  tags:
    - docker
